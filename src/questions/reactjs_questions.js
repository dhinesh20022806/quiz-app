export default [
    {
      id: 'q1',
      text: 'What is React?',
      answers: [
        'A JavaScript library for building user interfaces',
        'A programming language',
        'A CSS framework',
        'A backend framework',
        'A database',
      ],
    },
    {
      id: 'q2',
      text: 'What is JSX?',
      answers: [
        'A syntax extension for JavaScript',
        'A templating language',
        'A type of JSON',
        'A CSS preprocessor',
        'A JavaScript compiler',
      ],
    },
    {
      id: 'q3',
      text: 'How do you create a React component?',
      answers: [
        'By extending the React.Component class',
        'By using the createComponent method',
        'By defining a function with a return statement',
        'By using a React directive',
        'By using a React element',
      ],
    },
    {
      id: 'q4',
      text: 'Which method is used to render a React element to the DOM?',
      answers: [
        'ReactDOM.render()',
        'React.render()',
        'ReactDOM.create()',
        'React.createElement()',
        'React.mount()',
      ],
    },
    {
      id: 'q5',
      text: 'How do you pass data to a React component?',
      answers: [
        'Using props',
        'Using state',
        'Using context',
        'Using events',
        'Using hooks',
      ],
    },
    {
      id: 'q6',
      text: 'Which hook is used to manage state in a functional component?',
      answers: [
        'useState',
        'useEffect',
        'useContext',
        'useReducer',
        'useCallback',
      ],
    },
    {
      id: 'q7',
      text: 'Which hook is used to perform side effects in a functional component?',
      answers: [
        'useEffect',
        'useState',
        'useContext',
        'useReducer',
        'useMemo',
      ],
    },
    {
      id: 'q8',
      text: 'What is a higher-order component (HOC) in React?',
      answers: [
        'A function that takes a component and returns a new component',
        'A method to manage state',
        'A built-in React hook',
        'A third-party library for state management',
        'A way to handle side effects',
      ],
    },
    {
      id: 'q9',
      text: 'How do you create a context in React?',
      answers: [
        'Using React.createContext()',
        'Using React.createContextProvider()',
        'Using React.useContext()',
        'Using React.createContextual()',
        'Using React.makeContext()',
      ],
    },
    {
      id: 'q10',
      text: 'What is the purpose of keys in React?',
      answers: [
        'To help React identify which items have changed, are added, or are removed',
        'To pass data between components',
        'To manage state within a component',
        'To optimize component performance',
        'To handle user input events',
      ],
    },
    {
      id: 'q11',
      text: 'What is the virtual DOM?',
      answers: [
        'A lightweight copy of the real DOM',
        'A feature to directly manipulate the DOM',
        'A tool for debugging React applications',
        'A method to style React components',
        'A way to manage state',
      ],
    },
    {
      id: 'q12',
      text: 'How do you handle events in React?',
      answers: [
        'Using camelCase syntax for event names and passing a function as the event handler',
        'Using lowercase syntax for event names and passing a string as the event handler',
        'Using special React event methods',
        'Using a custom event library',
        'Using jQuery event handlers',
      ],
    },
    {
      id: 'q13',
      text: 'What is the purpose of the useEffect hook?',
      answers: [
        'To perform side effects in a functional component',
        'To manage state in a functional component',
        'To create context in a functional component',
        'To optimize component rendering',
        'To define prop types',
      ],
    },
    {
      id: 'q14',
      text: 'How do you conditionally render a React component?',
      answers: [
        'Using JavaScript conditional statements (if, ternary operator)',
        'Using a special React conditional method',
        'Using the switch statement within JSX',
        'Using a conditional prop',
        'Using a third-party library',
      ],
    },
    {
      id: 'q15',
      text: 'What is a pure component in React?',
      answers: [
        'A component that does not re-render if its props and state do not change',
        'A component without state',
        'A component with only props',
        'A component that handles user input',
        'A component that fetches data',
      ],
    },
    {
      id: 'q16',
      text: 'What is React Router used for?',
      answers: [
        'To handle routing in a React application',
        'To manage state in a React application',
        'To handle form validation',
        'To style React components',
        'To optimize React performance',
      ],
    },
    {
      id: 'q17',
      text: 'How do you fetch data in a React component?',
      answers: [
        'Using the useEffect hook along with fetch or a similar API',
        'Using the useState hook',
        'Using the fetchData hook',
        'Using a component lifecycle method',
        'Using a higher-order component',
      ],
    },
    {
      id: 'q18',
      text: 'What is the useContext hook used for?',
      answers: [
        'To use context in a functional component',
        'To manage state in a functional component',
        'To perform side effects in a functional component',
        'To create context in a functional component',
        'To memoize functions in a functional component',
      ],
    },
    {
      id: 'q19',
      text: 'What does the "key" prop do in React?',
      answers: [
        'It helps React identify which items have changed, are added, or are removed',
        'It manages state within a component',
        'It optimizes component performance',
        'It handles user input events',
        'It styles React components',
      ],
    },
    {
      id: 'q20',
      text: 'What is the purpose of prop types in React?',
      answers: [
        'To perform type checking on props',
        'To manage component state',
        'To handle events in React components',
        'To optimize rendering performance',
        'To create context in a component',
      ],
    },
];
